name: Release and Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          COMMITS=$(git log --pretty=format:"* %s (%h)" --reverse)
        else
          COMMITS=$(git log --pretty=format:"* %s (%h)" ${LAST_TAG}..HEAD --reverse)
        fi
        
        # Create changelog
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## Changes in ${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "$COMMITS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'

    - name: Build frontend
      run: |
        cd dashboard/frontend
        npm ci
        npm run build

    - name: Create deployment package
      run: |
        mkdir -p release-package
        cp -r src/ release-package/
        cp -r dashboard/frontend/build release-package/public
        cp requirements.txt release-package/
        cp docker-compose.yml release-package/
        cp Dockerfile release-package/
        cp README.md release-package/
        cp LICENSE release-package/ 2>/dev/null || echo "No LICENSE file found"
        
        # Create archive
        tar -czf dynamic-ai-chatbot-${{ steps.version.outputs.VERSION }}.tar.gz -C release-package .
        zip -r dynamic-ai-chatbot-${{ steps.version.outputs.VERSION }}.zip release-package/

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: Dynamic AI Chatbot ${{ steps.version.outputs.VERSION }}
        body: |
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          ### Docker (Recommended)
          ```bash
          docker run -p 8000:8000 ghcr.io/neslang-05/dynamic_ai_chatbot:${{ steps.version.outputs.VERSION }}
          ```
          
          ### Manual Installation
          1. Download and extract the package below
          2. Install dependencies: `pip install -r requirements.txt`
          3. Run the application: `python src/main.py`
          
          ## What's Changed
          - See commits above for detailed changes
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ env.LAST_TAG }}...${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'rc') }}

    - name: Upload tar.gz asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dynamic-ai-chatbot-${{ steps.version.outputs.VERSION }}.tar.gz
        asset_name: dynamic-ai-chatbot-${{ steps.version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload zip asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dynamic-ai-chatbot-${{ steps.version.outputs.VERSION }}.zip
        asset_name: dynamic-ai-chatbot-${{ steps.version.outputs.VERSION }}.zip
        asset_content_type: application/zip

  deploy-release:
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push release image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION }}
          ghcr.io/${{ github.repository }}:latest

    - name: Deploy to production
      run: |
        echo "Deploying version ${{ steps.version.outputs.VERSION }} to production"
        # Add your production deployment commands here