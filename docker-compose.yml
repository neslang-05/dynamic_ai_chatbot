services:
  # Main Chatbot API (FastAPI)
  chatbot:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_URL=mongodb://root:password@mongodb:27017/dynamic_ai_chatbot?authSource=admin
      - MONGODB_DB=dynamic_ai_chatbot
      - LOG_LEVEL=INFO
      - SESSION_TIMEOUT=3600
      - MAX_CONTEXT_LENGTH=10
    depends_on:
      - redis
      - mongodb
    volumes:
      - ./logs:/app/logs
      - ./src:/app/src
    restart: unless-stopped
    networks:
      - chatbot-network

  # Dashboard Backend (Flask)
  dashboard-backend:
    build:
      context: .
      dockerfile: dashboard/backend/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - CHATBOT_API_URL=http://chatbot:8000
      - DASHBOARD_PORT=5000
      - FLASK_DEBUG=false
    depends_on:
      - chatbot
      - redis
      - mongodb
    volumes:
      - ./logs:/app/logs
      - ./dashboard/backend:/app/dashboard/backend
    restart: unless-stopped
    networks:
      - chatbot-network

  # Dashboard Frontend (React)
  dashboard-frontend:
    build:
      context: .
      dockerfile: dashboard/frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - dashboard-backend
    volumes:
      - ./dashboard/frontend/src:/app/src
      - ./dashboard/frontend/public:/app/public
    restart: unless-stopped
    networks:
      - chatbot-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - chatbot-network

  # MongoDB Database
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=dynamic_ai_chatbot
    restart: unless-stopped
    networks:
      - chatbot-network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - chatbot
      - dashboard-backend
      - dashboard-frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    networks:
      - chatbot-network
    profiles:
      - production

volumes:
  redis_data:
  mongodb_data:

networks:
  chatbot-network:
    driver: bridge